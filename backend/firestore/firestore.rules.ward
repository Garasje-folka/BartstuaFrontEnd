rules_version = '2';

type DateHour = {
  hour: int,
  year: int,
  month: int,
  day: int,
}

type EventData = {
  spacesTaken: int,
  date: DateHour,
}

type ReservationData = {
  date: DateHour,
  spaces: int,
  timestamp: int,
}

type BookingData = {
  date: DateHour,
  spaces: int,
  uid: string,
}

function maximumAvailableSpaces() {
  return 10;
}

function isAuthenticated() { 
  let a = request.auth;
  return a!=null; 
}

function isRequestedByCurrentUser() { 
  return resource.data.uid == request.auth.uid
}

function dataContainsUid(bookingId) { 
  return request.resource.data.uid == request.auth.uid
}

match /events/{eventDoc} is EventData{
  allow read: true;
}

match /users/{userDoc}/reservations/{reservationDoc} is ReservationData {
  allow read: userDoc == request.auth.uid;
}


